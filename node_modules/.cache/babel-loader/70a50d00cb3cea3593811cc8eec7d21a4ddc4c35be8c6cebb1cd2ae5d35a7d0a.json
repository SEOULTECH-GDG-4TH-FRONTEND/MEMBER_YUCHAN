{"ast":null,"code":"import axiosInstance from \"../utils/axiosInstance\";\nexport const createQuestion = ({\n  targetId,\n  content,\n  subject = \"\"\n}) => {\n  return axiosInstance.post(\"/question\", {\n    targetId,\n    subject,\n    content\n  });\n};\nexport const getReceivedQuestions = () => {\n  return axiosInstance.get(\"/question/received\").then(response => response.data).catch(error => {\n    throw error;\n  });\n};\nexport const getSentQuestions = () => {\n  return axiosInstance.get(\"/question/sent\").then(response => response.data).catch(error => {\n    throw error;\n  });\n};\nexport const getReceivedAnswers = () => {\n  return axiosInstance.get(\"/answer/all\").then(response => response.data).catch(error => {\n    throw error;\n  });\n};\nexport const createAnswer = ({\n  questionId,\n  content\n}) => {\n  return axiosInstance.post(\"/answer\", {\n    questionId,\n    content\n  });\n};","map":{"version":3,"names":["axiosInstance","createQuestion","targetId","content","subject","post","getReceivedQuestions","get","then","response","data","catch","error","getSentQuestions","getReceivedAnswers","createAnswer","questionId"],"sources":["/Users/master/MEMBER_YUCHAN/src/apis/qna.js"],"sourcesContent":["import axiosInstance from \"../utils/axiosInstance\";\n\nexport const createQuestion = ({ targetId, content, subject = \"\" }) => {\n    return axiosInstance.post(\"/question\", {\n        targetId,\n        subject,\n        content,\n    });\n};\n\nexport const getReceivedQuestions = () => {\n    return axiosInstance\n        .get(\"/question/received\")\n        .then((response) => response.data)\n        .catch((error) => {\n            throw error;\n        });\n};\n\nexport const getSentQuestions = () => {\n    return axiosInstance\n        .get(\"/question/sent\")\n        .then((response) => response.data)\n        .catch((error) => {\n            throw error;\n        });\n};\n\nexport const getReceivedAnswers = () => {\n    return axiosInstance\n        .get(\"/answer/all\")\n        .then((response) => response.data)\n        .catch((error) => {\n            throw error;\n        });\n};\n\nexport const createAnswer = ({ questionId, content }) => {\n    return axiosInstance.post(\"/answer\", {\n        questionId,\n        content,\n    });\n};\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,wBAAwB;AAElD,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,OAAO,GAAG;AAAG,CAAC,KAAK;EACnE,OAAOJ,aAAa,CAACK,IAAI,CAAC,WAAW,EAAE;IACnCH,QAAQ;IACRE,OAAO;IACPD;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;EACtC,OAAON,aAAa,CACfO,GAAG,CAAC,oBAAoB,CAAC,CACzBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAK;IACd,MAAMA,KAAK;EACf,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAOb,aAAa,CACfO,GAAG,CAAC,gBAAgB,CAAC,CACrBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAK;IACd,MAAMA,KAAK;EACf,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAGA,CAAA,KAAM;EACpC,OAAOd,aAAa,CACfO,GAAG,CAAC,aAAa,CAAC,CAClBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAK;IACd,MAAMA,KAAK;EACf,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAAC;EAAEC,UAAU;EAAEb;AAAQ,CAAC,KAAK;EACrD,OAAOH,aAAa,CAACK,IAAI,CAAC,SAAS,EAAE;IACjCW,UAAU;IACVb;EACJ,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}