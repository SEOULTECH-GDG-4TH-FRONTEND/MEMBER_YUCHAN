{"ast":null,"code":"var _jsxFileName = \"/Users/master/dev/letYuchan.github.io/24Second-2_workspace/gdg/SEESION-4-REACT-EXAMPLE/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    // 로컬스토리지에서 초기 상태 가져오기\n    const savedStatus = localStorage.getItem(\"isLoggedIn\");\n    return savedStatus === \"true\";\n  });\n  const setLogin = () => {\n    setIsLoggedIn(true);\n    localStorage.setItem(\"isLoggedIn\", \"true\");\n  };\n  const setLogout = () => {\n    setIsLoggedIn(false);\n    localStorage.setItem(\"isLoggedIn\", \"false\");\n  };\n  useEffect(() => {\n    // 로그인 상태가 변경될 때마다 로컬스토리지 업데이트\n    localStorage.setItem(\"isLoggedIn\", isLoggedIn.toString());\n  }, [isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      setLogin,\n      setLogout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"2+su8EE9U83W7s74O5mHfhsK7S8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","savedStatus","localStorage","getItem","setLogin","setItem","setLogout","toString","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/master/dev/letYuchan.github.io/24Second-2_workspace/gdg/SEESION-4-REACT-EXAMPLE/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(() => {\n        // 로컬스토리지에서 초기 상태 가져오기\n        const savedStatus = localStorage.getItem(\"isLoggedIn\");\n        return savedStatus === \"true\";\n    });\n\n    const setLogin = () => {\n        setIsLoggedIn(true);\n        localStorage.setItem(\"isLoggedIn\", \"true\");\n    };\n\n    const setLogout = () => {\n        setIsLoggedIn(false);\n        localStorage.setItem(\"isLoggedIn\", \"false\");\n    };\n\n    useEffect(() => {\n        // 로그인 상태가 변경될 때마다 로컬스토리지 업데이트\n        localStorage.setItem(\"isLoggedIn\", isLoggedIn.toString());\n    }, [isLoggedIn]);\n\n    return (\n        <AuthContext.Provider value={{ isLoggedIn, setLogin, setLogout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC/C;IACA,MAAMW,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,OAAOF,WAAW,KAAK,MAAM;EACjC,CAAC,CAAC;EAEF,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACnBJ,aAAa,CAAC,IAAI,CAAC;IACnBE,YAAY,CAACG,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;EAC9C,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBN,aAAa,CAAC,KAAK,CAAC;IACpBE,YAAY,CAACG,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC;EAC/C,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZ;IACAU,YAAY,CAACG,OAAO,CAAC,YAAY,EAAEN,UAAU,CAACQ,QAAQ,CAAC,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACR,UAAU,CAAC,CAAC;EAEhB,oBACIL,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,UAAU;MAAEK,QAAQ;MAAEE;IAAU,CAAE;IAAAT,QAAA,EAC5DA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACf,EAAA,CA3BWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA6BzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzB,UAAU,CAACI,WAAW,CAAC;AAAA;AAACqB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}